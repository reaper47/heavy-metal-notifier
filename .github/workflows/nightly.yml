name: Nightly

on:
  #schedule:
  #  - cron: "0 1 * * *"
  pull_request

permissions:
  contents: read
  packages: write

jobs:
  commits:
    name: Commits
    runs-on: ubuntu-latest
    outputs:
      numCommits: ${{ steps.numCommits.outputs.commits }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get new commits
        id: numCommits
        run: echo "commits=$(git log --oneline --since '24 hours ago' | wc -l)" >> "$GITHUB_OUTPUT"

  release:
    timeout-minutes: 60
    needs: commits
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - build: linux
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - build: linux
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: macos
            os: macos-latest
            target: aarch64-apple-darwin

          #- build: windows
          #  os: windows-latest
          #  target: x86_64-pc-windows-msvc

          #- build: windows
          #  os: windows-latest
          #  target: x86_64-pc-windows-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="heavy-metal-notifier"

          dirname="$binary_name-nightly-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
            mv "deploy/.env.example" "$dirname/.env"
            mv "LICENSE" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
            mv "deploy/.env.example" "$dirname/.env"
            mv "LICENSE" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            sha256sum "$dirname.zip" > "$dirname.zip.sha256"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
            echo "CHECKSUM=$dirname.zip.sha256" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            sha256sum "$dirname.tar.gz" > "$dirname.tar.gz.sha256"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
            echo "CHECKSUM=$dirname.tar.gz.sha256" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
            ${{ env.CHECKSUM }}

  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: commits

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "VERSION=nightly" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            reaper99/heavy-metal-notifier:${{ steps.vars.outputs.VERSION }} 
            ghcr.io/${{ github.repository_owner }}/heavy-metal-notifier:${{ steps.vars.outputs.VERSION }}
