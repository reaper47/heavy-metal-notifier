name: Nightly

on:
  #schedule:
  #  - cron: "0 1 * * *"
  pull_request

env:
  DOCKER_REPO: reaper99/heavy-metal-notifier
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/heavy-metal-notifier

permissions:
  contents: read
  packages: write

jobs:
  commits:
    name: Commits
    runs-on: ubuntu-latest
    outputs:
      numCommits: ${{ steps.numCommits.outputs.commits }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get new commits
        id: numCommits
        run: echo "commits=$(git log --oneline --since '24 hours ago' | wc -l)" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: commits

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "VERSION=nightly" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/Dockerfile
          push: true
          platforms: linux/amd64
          #,linux/arm64
          tags: |
            ${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.VERSION }} 
            ${{ env.GHCR_REPO}}:${{ steps.vars.outputs.VERSION }}

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "VERSION=nightly" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Docker Hub manifest
        run: |
          docker manifest create $DOCKER_REPO:${{ steps.vars.outputs.VERSION }}

      - name: Create GHCR manifest
        run: |
          docker manifest create $GHCR_REPO:${{ steps.vars.outputs.VERSION }}

      - name: Push manifests
        run: |
          docker manifest push $DOCKER_REPO:${{ steps.vars.outputs.VERSION }}
          docker manifest push $GHCR_REPO:${{ steps.vars.outputs.VERSION }}
